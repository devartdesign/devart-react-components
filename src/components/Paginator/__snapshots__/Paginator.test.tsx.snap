// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Paginator Component render handleClick should navigate to page 19 1`] = `
.paginationNav {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -ms-flex-preferred-size: 100%;
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-basis: 100%;
  flex-basis: 100%;
  -webkit-align-items: center;
  align-items: center;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}

.pageLimiter {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 60px;
  height: 30px;
  background-color: #fff;
  border-radius: 3px;
  border: 1px solid #CCC;
}

.navPagination {
  -ms-flex-preferred-size: 100%;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-basis: 100%;
  flex-basis: 100%;
}

.pagination {
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  background-color: #FFF;
  padding: 0 10px;
  margin: 10px 0;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-grow: 1;
  flex-grow: 1;
  list-style-type: none;
}

.pageItem {
  -ms-flex-line-pack: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-align-content: center;
  align-content: center;
  width: 25px;
  height: 25px;
}

.pageItemButtonActive {
  cursor: pointer;
  border: none;
  background-color: #29434e;
  color: #FFF;
  width: 100%;
  height: 100%;
  padding: 0px;
}

.pageItemButton {
  cursor: pointer;
  border: none;
  background-color: #FFF;
  width: 100%;
  height: 100%;
  padding: 0px;
}

.pageItemButton:hover {
  background-color: #546e7a;
  color: #FFF;
}

<div
  className="paginationNav"
>
  <select
    className="pageLimiter"
    onChange={[Function]}
    value={2}
  >
    <option
      value={1}
    >
      1
    </option>
    <option
      value={5}
    >
      5
    </option>
    <option
      value={10}
    >
      10
    </option>
    <option
      value={15}
    >
      15
    </option>
    <option
      value={20}
    >
      20
    </option>
    <option
      value={25}
    >
      25
    </option>
  </select>
  <nav
    aria-label="nav-pagination"
    className="navPagination"
  >
    <ul
      className="pagination"
    >
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButtonActive"
          onClick={[Function]}
          type="button"
        >
          <span>
            1
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            2
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            3
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            4
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            5
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            6
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            7
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span
            aria-hidden="true"
          >
            Â«
          </span>
          <span>
            Prev
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            20
          </span>
        </button>
      </li>
    </ul>
  </nav>
</div>
`;

exports[`Paginator Component render should render with 20 items in page 1 1`] = `
.paginationNav {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -ms-flex-preferred-size: 100%;
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-basis: 100%;
  flex-basis: 100%;
  -webkit-align-items: center;
  align-items: center;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}

.pageLimiter {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  width: 60px;
  height: 30px;
  background-color: #fff;
  border-radius: 3px;
  border: 1px solid #CCC;
}

.navPagination {
  -ms-flex-preferred-size: 100%;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-basis: 100%;
  flex-basis: 100%;
}

.pagination {
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  background-color: #FFF;
  padding: 0 10px;
  margin: 10px 0;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-grow: 1;
  flex-grow: 1;
  list-style-type: none;
}

.pageItem {
  -ms-flex-line-pack: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-align-content: center;
  align-content: center;
  width: 25px;
  height: 25px;
}

.pageItemButtonActive {
  cursor: pointer;
  border: none;
  background-color: #29434e;
  color: #FFF;
  width: 100%;
  height: 100%;
  padding: 0px;
}

.pageItemButton {
  cursor: pointer;
  border: none;
  background-color: #FFF;
  width: 100%;
  height: 100%;
  padding: 0px;
}

.pageItemButton:hover {
  background-color: #546e7a;
  color: #FFF;
}

<div
  className="paginationNav"
>
  <select
    className="pageLimiter"
    onChange={[Function]}
    value={2}
  >
    <option
      value={1}
    >
      1
    </option>
    <option
      value={5}
    >
      5
    </option>
    <option
      value={10}
    >
      10
    </option>
    <option
      value={15}
    >
      15
    </option>
    <option
      value={20}
    >
      20
    </option>
    <option
      value={25}
    >
      25
    </option>
  </select>
  <nav
    aria-label="nav-pagination"
    className="navPagination"
  >
    <ul
      className="pagination"
    >
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButtonActive"
          onClick={[Function]}
          type="button"
        >
          <span>
            1
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            2
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            3
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            4
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            5
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            6
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            7
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span
            aria-hidden="true"
          >
            Â«
          </span>
          <span>
            Prev
          </span>
        </button>
      </li>
      <li
        className="pageItem"
      >
        <button
          aria-label="Next"
          className="pageItemButton"
          onClick={[Function]}
          type="button"
        >
          <span>
            20
          </span>
        </button>
      </li>
    </ul>
  </nav>
</div>
`;
